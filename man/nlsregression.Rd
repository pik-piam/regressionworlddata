% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlsregression.R
\name{nlsregression}
\alias{nlsregression}
\title{nlsregression}
\usage{
nlsregression(
  func,
  y,
  x,
  z = NULL,
  startvalues = NULL,
  weight = NULL,
  weighting = TRUE,
  xlab = NULL,
  ylab = "y",
  header = NULL,
  z_plot_lines = NULL,
  weightcolorpoints = TRUE,
  x_log10 = FALSE,
  toPlot = "all",
  plot_x_function = "ignore",
  regressioncolor = "blue",
  weight_threshold = NULL,
  crossvalid = NULL,
  ...
)
}
\arguments{
\item{func}{function that shall be fitted. Function should contain the
dependent variable y and and the independent variable x, eventually a second
independent variable z. All other unknowns are treated as parameters that
are estimated.}

\item{y}{dependent variable,vector}

\item{x}{independent variable,vector}

\item{z}{optional independent variable,vector}

\item{startvalues}{the optimization algorithm may require starting values
for the fitting procedure. provide them in a list with the parameter names:
e.g. list(a=3,b=2)}

\item{weight}{optional weight,vector}

\item{weighting}{if weighting is TRUE, the fit will minimize the weighted residuals}

\item{xlab}{name of x axis in plot}

\item{ylab}{name of y axis in plot}

\item{header}{plot function main argument}

\item{z_plot_lines}{vector>1 of values for z you want to be plotted into the
graph}

\item{weightcolorpoints}{if TRUE, the points are clustered into three
quantiles according to their weight and coloured lighter for low weights.}

\item{x_log10}{allows log10 scale for X axis if set to TRUE. Only changes the picture, not
the regression!}

\item{toPlot}{"all", "frame" (axis etc), "observations" (points), "regressionline" (line), "infos" (parameters, R2)}

\item{plot_x_function}{depreciated, please do not enter into function call.}

\item{regressioncolor}{color of regression line and paramter text}

\item{weight_threshold}{if numeric, all countries below this threshold will be excluded (e.g. to exclude minor islands)}

\item{crossvalid}{vector with boolean values, indicating which data should be excluded from sampling and rather be used for validation}

\item{...}{will be passed on to function nls}
}
\value{
A nice picture and regression parameters or eventually some errors.
}
\description{
Creates regression parameter estimates and plots with any function you want
that has no more than two independent variables
}
\examples{
\dontrun{
x=1:10
y=(1:10)^2+1
z=c(10:1)

# one independent variable
nlsregression(func=y~a*x+b,y=y,x=x,startvalues=list(a=1,b=1))
# two independent variables
nlsregression(func=y~a*x^1.1+b*z+c*x,y=y,x=x,z=z,startvalues=list(a=1,b=1,c=0))
# no fit because residuals are zero (excluded from the nls makers due
 to statistical reasons)
nlsregression(func=y~x^a+b,y=y,x=x,z=z,startvalues=list(a=1,b=1,c=0))

DNase1 <- subset(DNase, Run == 1)
DNase1$sets<- c(rep(1,8),rep(2,8))
nlsregression(func=y~a*x+b,y=DNase1$density,x=DNase1$conc,startvalues=list(a=1,b=1))
nlsregression(func=y~a*x+b*z,y=DNase1$density,x=DNase1$conc,z=DNase1$sets,
startvalues=list(a=0.1344,b=0.2597))
nlsregression(func=y~a*x+b*z,y=DNase1$density,x=DNase1$conc,z=DNase1$sets,
startvalues=list(a=0.1344,b=0.2597),plot_x_function=log)
}
}
\author{
Benjamin Leon Bodirsky, Susanne Rolinski, Xiaoxi Wang
}
